state 0 //

    0 $accept: . calc
    1 calc: .  [$end, '(', '-', '\n', EXIT, NB]

    $end  reduce using rule 1 (calc)
    '('   reduce using rule 1 (calc)
    '-'   reduce using rule 1 (calc)
    '\n'  reduce using rule 1 (calc)
    EXIT  reduce using rule 1 (calc)
    NB    reduce using rule 1 (calc)

    calc  goto state 1

state 1 // [$end]

    0 $accept: calc .  [$end]
    2 calc: calc . exp

    $end  accept
    '('   shift, and goto state 11
    '-'   shift, and goto state 10
    '\n'  shift, and goto state 3
    EXIT  shift, and goto state 5
    NB    shift, and goto state 9

    exp     goto state 2
    expNum  goto state 4
    expo    goto state 7
    fact    goto state 6
    term    goto state 8

state 2 // '\n' [$end]

    2 calc: calc exp .  [$end, '(', '-', '\n', EXIT, NB]

    $end  reduce using rule 2 (calc)
    '('   reduce using rule 2 (calc)
    '-'   reduce using rule 2 (calc)
    '\n'  reduce using rule 2 (calc)
    EXIT  reduce using rule 2 (calc)
    NB    reduce using rule 2 (calc)

state 3 // '\n'

    3 exp: '\n' .  [$end, '(', '-', '\n', EXIT, NB]

    $end  reduce using rule 3 (exp)
    '('   reduce using rule 3 (exp)
    '-'   reduce using rule 3 (exp)
    '\n'  reduce using rule 3 (exp)
    EXIT  reduce using rule 3 (exp)
    NB    reduce using rule 3 (exp)

state 4 // NB ['+']

    4 exp: expNum . '='
    7 expNum: expNum . '+' fact
    8 expNum: expNum . '-' fact

    '+'  shift, and goto state 13
    '-'  shift, and goto state 14
    '='  shift, and goto state 25

state 5 // EXIT

    5 exp: EXIT .  [$end, '(', '-', '\n', EXIT, NB]

    $end  reduce using rule 5 (exp)
    '('   reduce using rule 5 (exp)
    '-'   reduce using rule 5 (exp)
    '\n'  reduce using rule 5 (exp)
    EXIT  reduce using rule 5 (exp)
    NB    reduce using rule 5 (exp)

state 6 // NB [')']

    6 expNum: fact .  [')', '*', '+', '-', '/', '=', '^']
   10 fact: fact . '*' expo
   11 fact: fact . '/' expo

    ')'  reduce using rule 6 (expNum)
    '*'  shift, and goto state 17
    '+'  reduce using rule 6 (expNum)
    '-'  reduce using rule 6 (expNum)
    '/'  shift, and goto state 18
    '='  reduce using rule 6 (expNum)
    '^'  reduce using rule 6 (expNum)
    conflict on '*', shift, and goto state 17, reduce using rule 6
    conflict on '/', shift, and goto state 18, reduce using rule 6

state 7 // NB [')']

    9 fact: expo .  [')', '*', '+', '-', '/', '=', '^']
   13 expo: expo . '^' term

    ')'  reduce using rule 9 (fact)
    '*'  reduce using rule 9 (fact)
    '+'  reduce using rule 9 (fact)
    '-'  reduce using rule 9 (fact)
    '/'  reduce using rule 9 (fact)
    '='  reduce using rule 9 (fact)
    '^'  shift, and goto state 20
    conflict on '^', shift, and goto state 20, reduce using rule 9

state 8 // NB [')']

   12 expo: term .  [')', '*', '+', '-', '/', '=', '^']

    ')'  reduce using rule 12 (expo)
    '*'  reduce using rule 12 (expo)
    '+'  reduce using rule 12 (expo)
    '-'  reduce using rule 12 (expo)
    '/'  reduce using rule 12 (expo)
    '='  reduce using rule 12 (expo)
    '^'  reduce using rule 12 (expo)

state 9 // NB

   14 term: NB .  [')', '*', '+', '-', '/', '=', '^']

    ')'  reduce using rule 14 (term)
    '*'  reduce using rule 14 (term)
    '+'  reduce using rule 14 (term)
    '-'  reduce using rule 14 (term)
    '/'  reduce using rule 14 (term)
    '='  reduce using rule 14 (term)
    '^'  reduce using rule 14 (term)

state 10 // '-'

   15 term: '-' . expNum  // assoc %left, prec 1

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expNum  goto state 24
    expo    goto state 7
    fact    goto state 6
    term    goto state 8

state 11 // '('

   16 term: '(' . expNum ')'

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expNum  goto state 12
    expo    goto state 7
    fact    goto state 6
    term    goto state 8

state 12 // '(' NB [')']

    7 expNum: expNum . '+' fact
    8 expNum: expNum . '-' fact
   16 term: '(' expNum . ')'

    ')'  shift, and goto state 15
    '+'  shift, and goto state 13
    '-'  shift, and goto state 14

state 13 // NB '+'

    7 expNum: expNum '+' . fact

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expo  goto state 7
    fact  goto state 23
    term  goto state 8

state 14 // NB '-'

    8 expNum: expNum '-' . fact

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expo  goto state 7
    fact  goto state 16
    term  goto state 8

state 15 // '(' NB ')'

   16 term: '(' expNum ')' .  [')', '*', '+', '-', '/', '=', '^']

    ')'  reduce using rule 16 (term)
    '*'  reduce using rule 16 (term)
    '+'  reduce using rule 16 (term)
    '-'  reduce using rule 16 (term)
    '/'  reduce using rule 16 (term)
    '='  reduce using rule 16 (term)
    '^'  reduce using rule 16 (term)

state 16 // NB '-' NB [')']

    8 expNum: expNum '-' fact .  [')', '*', '+', '-', '/', '=', '^']
   10 fact: fact . '*' expo
   11 fact: fact . '/' expo

    ')'  reduce using rule 8 (expNum)
    '*'  shift, and goto state 17
    '+'  reduce using rule 8 (expNum)
    '-'  reduce using rule 8 (expNum)
    '/'  shift, and goto state 18
    '='  reduce using rule 8 (expNum)
    '^'  reduce using rule 8 (expNum)
    conflict on '*', shift, and goto state 17, reduce using rule 8
    conflict on '/', shift, and goto state 18, reduce using rule 8

state 17 // NB '*'

   10 fact: fact '*' . expo

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expo  goto state 22
    term  goto state 8

state 18 // NB '/'

   11 fact: fact '/' . expo

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    expo  goto state 19
    term  goto state 8

state 19 // NB '/' NB [')']

   11 fact: fact '/' expo .  [')', '*', '+', '-', '/', '=', '^']
   13 expo: expo . '^' term

    ')'  reduce using rule 11 (fact)
    '*'  reduce using rule 11 (fact)
    '+'  reduce using rule 11 (fact)
    '-'  reduce using rule 11 (fact)
    '/'  reduce using rule 11 (fact)
    '='  reduce using rule 11 (fact)
    '^'  shift, and goto state 20
    conflict on '^', shift, and goto state 20, reduce using rule 11

state 20 // NB '^'

   13 expo: expo '^' . term

    '('  shift, and goto state 11
    '-'  shift, and goto state 10
    NB   shift, and goto state 9

    term  goto state 21

state 21 // NB '^' NB [')']

   13 expo: expo '^' term .  [')', '*', '+', '-', '/', '=', '^']

    ')'  reduce using rule 13 (expo)
    '*'  reduce using rule 13 (expo)
    '+'  reduce using rule 13 (expo)
    '-'  reduce using rule 13 (expo)
    '/'  reduce using rule 13 (expo)
    '='  reduce using rule 13 (expo)
    '^'  reduce using rule 13 (expo)

state 22 // NB '*' NB [')']

   10 fact: fact '*' expo .  [')', '*', '+', '-', '/', '=', '^']
   13 expo: expo . '^' term

    ')'  reduce using rule 10 (fact)
    '*'  reduce using rule 10 (fact)
    '+'  reduce using rule 10 (fact)
    '-'  reduce using rule 10 (fact)
    '/'  reduce using rule 10 (fact)
    '='  reduce using rule 10 (fact)
    '^'  shift, and goto state 20
    conflict on '^', shift, and goto state 20, reduce using rule 10

state 23 // NB '+' NB [')']

    7 expNum: expNum '+' fact .  [')', '*', '+', '-', '/', '=', '^']
   10 fact: fact . '*' expo
   11 fact: fact . '/' expo

    ')'  reduce using rule 7 (expNum)
    '*'  shift, and goto state 17
    '+'  reduce using rule 7 (expNum)
    '-'  reduce using rule 7 (expNum)
    '/'  shift, and goto state 18
    '='  reduce using rule 7 (expNum)
    '^'  reduce using rule 7 (expNum)
    conflict on '*', shift, and goto state 17, reduce using rule 7
    conflict on '/', shift, and goto state 18, reduce using rule 7

state 24 // '-' NB [')']

    7 expNum: expNum . '+' fact
    8 expNum: expNum . '-' fact
   15 term: '-' expNum .  [')', '*', '+', '-', '/', '=', '^']  // assoc %left, prec 1

    ')'  reduce using rule 15 (term)
    '*'  reduce using rule 15 (term)
    '+'  shift, and goto state 13
    '-'  shift, and goto state 14
    '/'  reduce using rule 15 (term)
    '='  reduce using rule 15 (term)
    '^'  reduce using rule 15 (term)
    conflict on '+', shift, and goto state 13, reduce using rule 15
    conflict on '-', shift, and goto state 14, reduce using rule 15

state 25 // NB '='

    4 exp: expNum '=' .  [$end, '(', '-', '\n', EXIT, NB]

    $end  reduce using rule 4 (exp)
    '('   reduce using rule 4 (exp)
    '-'   reduce using rule 4 (exp)
    '\n'  reduce using rule 4 (exp)
    EXIT  reduce using rule 4 (exp)
    NB    reduce using rule 4 (exp)

